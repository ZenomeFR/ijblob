#summary Examples and Tutorials
#labels Featured

=IJBlob=
== Use the IJBlob Library for Developing an ImageJ Plugin ==
I suppose you use Eclipse as IDE. You have to add IJBlob.jar to Librarys in the Java Build Path:

_Project->Properties->Java Build Path->Librarys->Add External JARs._

Furthermore you have to add the following import line to your code:
{{{
import ij.blob.*;
}}}

Now you are able to use the IJBlob Library (see Example 1).

For deploying a plugin, I also include the IJBlob.jar to the plugin JAR-File. Therefore I saved the IJBlob.jar in the folder "lib" in the plugins root directory and add the following property to the build.xml:
{{{
...
<property name="lib.dir"       value="lib"/>
...
}}} 

Furthermore I add the marked line to the target in plugins build.xml:
{{{
...
<fileset dir="." includes="plugins.config" />
<fileset dir="${build}" includes="**/*.*" />
<fileset dir="${src}" includes="**/*.java"/>
<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" /> <!-- THE ADDED LINE-->
...
}}}

Maybe this is not the best solution, but it works for me.
== Example 1: Extract the Blobs of an Image and Read the Perimeter of a Blob ==
{{{
import ij.blob.*;
...
private ManyBlobs allBlobs;
...
public void someMethod(ImagePlus imp) {
  ManyBlobs allBlobs = new ManyBlobs(imp); // Extended ArrayList
  allBlobs.findConnectedComponents(); // Start the Connected Component Algorithm
  allBlobs.get(0).getPerimeter(); // Read the perimeter of a Blob
}
}}}

=Shape Filter=
== Install the `ShapeFilter` Plugin ==
Only copy the `ShapeFilter``_`vX.X.X`_`.jar in your ImageJ Plugin Folder